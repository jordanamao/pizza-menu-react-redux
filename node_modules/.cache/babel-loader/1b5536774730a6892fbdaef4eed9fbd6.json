{"ast":null,"code":"//Reducers specify how the application's state changes in response to actions sent\nconst initialState = {\n  contact: {\n    name: '',\n    email: '',\n    address: '',\n    phone_number: ''\n  },\n  sauce: {\n    sauce: '',\n    crust: ''\n  },\n  toppings: {\n    pepperoni: false,\n    mushroom: false,\n    onion: false,\n    sausage: false,\n    cheese: false,\n    olive: false\n  }\n};\nconst ToppingsList = [];\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    //Updates the user data to edit.data\n    case 'UPDATE_CONTACT':\n      return { ...state,\n        contact: action.payload\n      };\n    //updates the pizza sauce and crust data\n\n    case 'UPDATE_SAUCE':\n      return { ...state,\n        sauce: action.payload\n      };\n    //updates the toppings \n\n    case 'UPDATE_TOPPINGS':\n      let toppings = action.payload;\n\n      for (let [key, value] of Object.entries(toppings)) {\n        if (value === true) {\n          ToppingsList.push(key);\n        }\n      }\n\n      return { ...state,\n        toppings: ToppingList\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/runjiamao/Desktop/T-Mobile/pizza-project-redux/redux-pizza-jump-2020/pizza-project/src/reducers/index.js"],"names":["initialState","contact","name","email","address","phone_number","sauce","crust","toppings","pepperoni","mushroom","onion","sausage","cheese","olive","ToppingsList","reducer","state","action","type","payload","key","value","Object","entries","push","ToppingList"],"mappings":"AAAA;AAEA,MAAMA,YAAY,GAAG;AAEjBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAE,EADD;AAELC,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,OAAO,EAAE,EAHJ;AAILC,IAAAA,YAAY,EAAE;AAJT,GAFQ;AAQjBC,EAAAA,KAAK,EAAE;AACHA,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,KAAK,EAAE;AAFJ,GARU;AAajBC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,EAAE,KADN;AAELC,IAAAA,QAAQ,EAAE,KAFL;AAGLC,IAAAA,KAAK,EAAE,KAHF;AAILC,IAAAA,OAAO,EAAE,KAJJ;AAKLC,IAAAA,MAAM,EAAE,KALH;AAMLC,IAAAA,KAAK,EAAE;AANF;AAbQ,CAArB;AAuBA,MAAMC,YAAY,GAAG,EAArB;;AAEA,SAASC,OAAT,CAAiBC,KAAK,GAAGjB,YAAzB,EAAuCkB,MAAvC,EAA+C;AAE3C,UAAOA,MAAM,CAACC,IAAd;AACI;AACA,SAAK,gBAAL;AACI,aAAM,EACN,GAAGF,KADG;AAENhB,QAAAA,OAAO,EAAEiB,MAAM,CAACE;AAFV,OAAN;AAKJ;;AACA,SAAK,cAAL;AACI,aAAM,EACF,GAAGH,KADD;AAEFX,QAAAA,KAAK,EAAEY,MAAM,CAACE;AAFZ,OAAN;AAKJ;;AACA,SAAK,iBAAL;AACI,UAAIZ,QAAQ,GAAGU,MAAM,CAACE,OAAtB;;AAEA,WAAK,IAAI,CAACC,GAAD,EAAKC,KAAL,CAAT,IAAwBC,MAAM,CAACC,OAAP,CAAehB,QAAf,CAAxB,EAAiD;AAC7C,YAAIc,KAAK,KAAK,IAAd,EAAmB;AACfP,UAAAA,YAAY,CAACU,IAAb,CAAkBJ,GAAlB;AACH;AACJ;;AACD,aAAM,EACF,GAAGJ,KADD;AAEFT,QAAAA,QAAQ,EAAEkB;AAFR,OAAN;;AAKJ;AACI,aAAOT,KAAP;AA9BR;AAgCH;;AAED,eAAeD,OAAf","sourcesContent":["//Reducers specify how the application's state changes in response to actions sent\n\nconst initialState = {\n\n    contact: {\n        name: '',\n        email: '',\n        address: '',\n        phone_number: ''\n    },\n    sauce: {\n        sauce: '',\n        crust: '',\n     },\n\n    toppings:{\n        pepperoni: false,\n        mushroom: false,\n        onion: false,\n        sausage: false,\n        cheese: false,\n        olive: false,\n    }\n}\n\nconst ToppingsList = [];\n\nfunction reducer(state = initialState, action) {  \n\n    switch(action.type) {\n        //Updates the user data to edit.data\n        case 'UPDATE_CONTACT':\n            return{\n            ...state,\n            contact: action.payload \n            }\n         \n        //updates the pizza sauce and crust data\n        case 'UPDATE_SAUCE':\n            return{\n                ...state,\n                sauce: action.payload \n                }\n           \n        //updates the toppings \n        case 'UPDATE_TOPPINGS':\n            let toppings = action.payload;\n\n            for (let [key,value] of Object.entries(toppings)){\n                if (value === true){\n                    ToppingsList.push(key)\n                }\n            }\n            return{\n                ...state,\n                toppings: ToppingList\n                }\n\n        default:\n            return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
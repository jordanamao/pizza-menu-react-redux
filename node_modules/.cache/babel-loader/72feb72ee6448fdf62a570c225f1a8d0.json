{"ast":null,"code":"var _jsxFileName = \"/Users/runjiamao/Desktop/T-Mobile/pizza-project/redux-pizza-jump-2020/pizza-project/src/components/Toppings.js\";\nimport React, { Component } from 'react';\nimport { UserContext } from './Contact';\nimport Order from './Order';\nexport default class Toppings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      peperroniChecked: false,\n      mushroomChecked: false,\n      onionChecked: false,\n      sausageChecked: false,\n      cheeseChecked: false,\n      oliveChecked: false,\n      formSubmitted: false\n    };\n    this.handlePepperoniChange = this.handlePepperoniChange.bind(this);\n    this.handleSausageChange = this.handleSausageChange.bind(this);\n    this.handleMushRoomChange = this.handleMushroomChange.bind(this);\n    this.handleCheeseChange = this.handleCheeseChange.bind(this);\n    this.handleOliveChange = this.handleOliveChange.bind(this);\n    this.handleOnionChange = this.handleOnionChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handlePepperoniChange(event) {\n    this.setState({\n      peperroniChecked: event.target.checked\n    });\n  }\n\n  handleSausageChange(event) {\n    this.setState({\n      sausageChecked: event.target.checked\n    });\n  }\n\n  handleMushroomChange(event) {\n    this.setState({\n      mushroomChecked: event.target.checked\n    });\n  }\n\n  handleOnionChange(event) {\n    this.setState({\n      onionChecked: event.target.checked\n    });\n  }\n\n  handleCheeseChange(event) {\n    this.setState({\n      cheeseChecked: event.target.checked\n    });\n  }\n\n  handleOliveChange(event) {\n    this.setState({\n      oliveChecked: event.target.checked\n    });\n  }\n\n  handleSubmit(event) {\n    alert(\"Pepperoni checked:\" + this.state.peperroniChecked + \" Sausage Checked: \" + this.state.sausageChecked);\n    this.setState({\n      formSubmitted: true\n    });\n  }\n\n  render() {\n    if (this.state.formSubmitted === true) {\n      return React.createElement(Order, {\n        pepperoni: this.state.peperroniChecked,\n        sausage: this.state.sausageChecked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Choose your extra toppings!\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"The sauce and crust are: \", this.props.sauce, \" + \", this.props.crust), React.createElement(\"form\", {\n      onSubmit: () => this.handleSubmit(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Pepperoni:\", React.createElement(\"input\", {\n      name: \"pepperoni\",\n      type: \"checkbox\",\n      check: this.state.peperroniChecked,\n      onChange: this.handlePepperoniChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Mushroom:\", React.createElement(\"input\", {\n      name: \"mushroom\",\n      type: \"checkbox\",\n      check: this.state.mushroomChecked,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Onion:\", React.createElement(\"input\", {\n      name: \"onion\",\n      type: \"checkbox\",\n      check: this.state.onionChecked,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"sausage:\", React.createElement(\"input\", {\n      name: \"sausage\",\n      type: \"checkbox\",\n      check: this.state.sausageChecked,\n      onChange: this.handleSausageInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"cheese:\", React.createElement(\"input\", {\n      name: \"cheese\",\n      type: \"checkbox\",\n      check: this.state.cheeseChecked,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"olive:\", React.createElement(\"input\", {\n      name: \"olive\",\n      type: \"checkbox\",\n      check: this.state.oliveChecked,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })));\n  }\n\n} // export default class Toppings extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             checked: true,\n//           }\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//       }\n//       handleChange(event) {\n//         this.setState({sauce: event.target.value});\n//       }\n//       handleSubmit(event){\n//         alert(\"extra toppings: \" + this.state.sauce + \" Crust: \" + this.state.crust);\n//         this.setState({\n//           formSubmitted:true\n//           })\n//       }\n//     render(){\n//         return (\n//             <div>\n//             {<h1>\n//             Choose your extra toppings!\n//             </h1> }\n//             {/* <UserContext.Consumer>\n//             {value => <div>Hello: {value}</div>}\n//             </UserContext.Consumer> */}\n//             <h2>The sauce and crust are: {this.props.sauce} + {this.props.crust}</h2>\n//             <form>\n//             <label>\n//             Pepperoni:\n//             <input\n//                 name=\"pepperoni\"\n//                 type=\"checkbox\"\n//                 checked=\"checked\"\n//                 onChange={this.handleInputChange}\n//                 />\n//             </label>\n//             <label>\n//             Mushroom:\n//             <input\n//                 name=\"mushroom\"\n//                 type=\"checkbox\"\n//                 checked=\"checked\"\n//                 onChange={this.handleInputChange}\n//                 />\n//             </label>\n//             <label>\n//             Onion:\n//             <input\n//                 name=\"onion\"\n//                 type=\"checkbox\"\n//                 checked=\"checked\"\n//                 onChange={this.handleInputChange}\n//                 />\n//             </label>\n//             <label>\n//             sauge:\n//             <input\n//                 name=\"sauge\"\n//                 type=\"checkbox\"\n//                 checked=\"checked\"\n//                 onChange={this.handleInputChange}/>\n//             </label>\n//             <label>\n//             cheese:\n//             <input\n//                 name=\"cheese\"\n//                 type=\"checkbox\"\n//                 checked=\"checked\"\n//                 onChange={this.handleInputChange}/>\n//             </label>\n//             <label>\n//             olive:\n//             <input\n//                 name=\"olive\"\n//                 type=\"checkbox\"\n//                 checked=\"checked\"\n//                 onChange={this.handleInputChange}/>\n//             </label>\n//               <input type=\"submit\" value=\"Submit\" />\n//             </form>\n//             </div>       \n//         );   \n//     }\n// }","map":{"version":3,"sources":["/Users/runjiamao/Desktop/T-Mobile/pizza-project/redux-pizza-jump-2020/pizza-project/src/components/Toppings.js"],"names":["React","Component","UserContext","Order","Toppings","constructor","props","state","peperroniChecked","mushroomChecked","onionChecked","sausageChecked","cheeseChecked","oliveChecked","formSubmitted","handlePepperoniChange","bind","handleSausageChange","handleMushRoomChange","handleMushroomChange","handleCheeseChange","handleOliveChange","handleOnionChange","handleSubmit","event","setState","target","checked","alert","render","sauce","crust","handleInputChange","handleSausageInputChange","handleChange"],"mappings":"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","sourcesContent":["import React , {Component} from 'react';\nimport {UserContext} from './Contact';\nimport Order from './Order';\n\nexport default class Toppings extends Component {\n\n    constructor(props) {\n\n        super(props);\n        this.state = {\n            peperroniChecked: false,\n            mushroomChecked: false,\n            onionChecked: false,\n            sausageChecked: false,\n            cheeseChecked: false,\n            oliveChecked: false,\n            formSubmitted: false\n\n\n          }\n    \n        this.handlePepperoniChange = this.handlePepperoniChange.bind(this);\n        this.handleSausageChange = this.handleSausageChange.bind(this);\n        this.handleMushRoomChange = this.handleMushroomChange.bind(this);\n        this.handleCheeseChange = this.handleCheeseChange.bind(this);\n        this.handleOliveChange = this.handleOliveChange.bind(this);\n        this.handleOnionChange = this.handleOnionChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n\n\n      handlePepperoniChange(event) {\n        this.setState({peperroniChecked: event.target.checked});\n      }\n\n      handleSausageChange(event) {\n          this.setState({sausageChecked: event.target.checked});\n      }\n      handleMushroomChange(event) {\n          this.setState({mushroomChecked: event.target.checked});\n      }\n\n      handleOnionChange(event) {\n        this.setState({onionChecked: event.target.checked});\n    }\n\n    handleCheeseChange(event) {\n        this.setState({cheeseChecked: event.target.checked});\n    }\n\n    handleOliveChange(event) {\n        this.setState({oliveChecked: event.target.checked});\n    }\n \n      handleSubmit(event){\n        alert(\"Pepperoni checked:\" + this.state.peperroniChecked + \" Sausage Checked: \" + this.state.sausageChecked);        \n        this.setState({\n          formSubmitted: true\n          })\n      }\n\n    render(){\n        if (this.state.formSubmitted === true){\n            return(\n            <Order \n            pepperoni = {this.state.peperroniChecked}\n            sausage = {this.state.sausageChecked}\n            />\n           \n    \n            )\n          }\n\n\n        return (\n            <div>\n            {<h1>\n            Choose your extra toppings!\n            </h1> }\n\n            {/* <UserContext.Consumer>\n            {value => <div>Hello: {value}</div>}\n            </UserContext.Consumer> */}\n\n            <h2>The sauce and crust are: {this.props.sauce} + {this.props.crust}</h2>\n\n            <form  onSubmit = {()=> this.handleSubmit()}>\n            <label>\n            Pepperoni:\n            <input\n                name=\"pepperoni\"\n                type=\"checkbox\"\n                check={this.state.peperroniChecked}\n                onChange={this.handlePepperoniChange}\n                />\n            </label>\n\n            <label>\n            Mushroom:\n            <input\n                name=\"mushroom\"\n                type=\"checkbox\"\n                check={this.state.mushroomChecked}\n                onChange={this.handleInputChange}\n                />\n            </label>\n\n\n            <label>\n            Onion:\n            <input\n                name=\"onion\"\n                type=\"checkbox\"\n                check={this.state.onionChecked}\n                onChange={this.handleInputChange}\n                />\n            </label>\n\n            <label>\n            sausage:\n            <input\n                name=\"sausage\"\n                type=\"checkbox\"\n                check={this.state.sausageChecked}\n                onChange={this.handleSausageInputChange}/>\n            </label>\n\n            <label>\n            cheese:\n            <input\n                name=\"cheese\"\n                type=\"checkbox\"\n                check={this.state.cheeseChecked}\n                onChange={this.handleInputChange}/>\n            </label>\n\n\n            <label>\n            olive:\n            <input\n                name=\"olive\"\n                type=\"checkbox\"\n                check={this.state.oliveChecked}\n                onChange={this.handleChange}/>\n            </label>\n    \n    \n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            </div>       \n        );   \n    }\n\n\n}\n// export default class Toppings extends Component {\n\n//     constructor(props) {\n\n//         super(props);\n//         this.state = {\n//             checked: true,\n//           }\n    \n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//       }\n\n\n//       handleChange(event) {\n//         this.setState({sauce: event.target.value});\n//       }\n \n//       handleSubmit(event){\n//         alert(\"extra toppings: \" + this.state.sauce + \" Crust: \" + this.state.crust);\n//         this.setState({\n//           formSubmitted:true\n//           })\n//       }\n\n//     render(){\n//         return (\n//             <div>\n//             {<h1>\n//             Choose your extra toppings!\n//             </h1> }\n\n//             {/* <UserContext.Consumer>\n//             {value => <div>Hello: {value}</div>}\n//             </UserContext.Consumer> */}\n\n//             <h2>The sauce and crust are: {this.props.sauce} + {this.props.crust}</h2>\n\n//             <form>\n//             <label>\n//             Pepperoni:\n//             <input\n//                 name=\"pepperoni\"\n//                 type=\"checkbox\"\n//                 checked=\"checked\"\n//                 onChange={this.handleInputChange}\n//                 />\n//             </label>\n\n//             <label>\n//             Mushroom:\n//             <input\n//                 name=\"mushroom\"\n//                 type=\"checkbox\"\n//                 checked=\"checked\"\n//                 onChange={this.handleInputChange}\n//                 />\n//             </label>\n\n\n//             <label>\n//             Onion:\n//             <input\n//                 name=\"onion\"\n//                 type=\"checkbox\"\n//                 checked=\"checked\"\n//                 onChange={this.handleInputChange}\n//                 />\n//             </label>\n\n//             <label>\n//             sauge:\n//             <input\n//                 name=\"sauge\"\n//                 type=\"checkbox\"\n//                 checked=\"checked\"\n//                 onChange={this.handleInputChange}/>\n//             </label>\n\n//             <label>\n//             cheese:\n//             <input\n//                 name=\"cheese\"\n//                 type=\"checkbox\"\n//                 checked=\"checked\"\n//                 onChange={this.handleInputChange}/>\n//             </label>\n\n\n//             <label>\n//             olive:\n//             <input\n//                 name=\"olive\"\n//                 type=\"checkbox\"\n//                 checked=\"checked\"\n//                 onChange={this.handleInputChange}/>\n//             </label>\n    \n    \n//               <input type=\"submit\" value=\"Submit\" />\n//             </form>\n\n//             </div>       \n//         );   \n//     }\n\n\n// }"]},"metadata":{},"sourceType":"module"}
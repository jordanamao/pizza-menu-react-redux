{"ast":null,"code":"//Reducers specify how the application's state changes in response to actions sent\nconst initialState = {\n  contact: {\n    name: '',\n    email: '',\n    address: '',\n    phone_number: ''\n  },\n  sauce: {\n    sauce: '',\n    crust: ''\n  },\n  toppingsList: {}\n};\nlet ToppingsList = [];\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    //Updates the user data to edit.data\n    case 'UPDATE_CONTACT':\n      return { ...state,\n        contact: action.payload\n      };\n    //updates the pizza sauce and crust data\n\n    case 'UPDATE_SAUCE':\n      return { ...state,\n        sauce: action.payload\n      };\n    //updates the toppings \n\n    case 'UPDATE_TOPPINGS':\n      let toppings = action.payload;\n      ToppingsList = [];\n\n      for (let [key, value] of Object.entries(toppings)) {\n        if (value === true) {\n          ToppingsList.push(key);\n        }\n      }\n\n      console.log(ToppingsList);\n      return { ...state,\n        toppingsList: ToppingsList\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/runjiamao/Desktop/pizza-project-react-redux/pizza-project/src/reducers/index.js"],"names":["initialState","contact","name","email","address","phone_number","sauce","crust","toppingsList","ToppingsList","reducer","state","action","type","payload","toppings","key","value","Object","entries","push","console","log"],"mappings":"AAAA;AAEA,MAAMA,YAAY,GAAG;AAEjBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAE,EADD;AAELC,IAAAA,KAAK,EAAE,EAFF;AAGLC,IAAAA,OAAO,EAAE,EAHJ;AAILC,IAAAA,YAAY,EAAE;AAJT,GAFQ;AAQjBC,EAAAA,KAAK,EAAE;AACHA,IAAAA,KAAK,EAAE,EADJ;AAEHC,IAAAA,KAAK,EAAE;AAFJ,GARU;AAajBC,EAAAA,YAAY,EAAC;AAbI,CAArB;AAgBA,IAAIC,YAAY,GAAG,EAAnB;;AAEA,SAASC,OAAT,CAAiBC,KAAK,GAAGX,YAAzB,EAAuCY,MAAvC,EAA+C;AAE3C,UAAOA,MAAM,CAACC,IAAd;AACI;AACA,SAAK,gBAAL;AACI,aAAM,EACN,GAAGF,KADG;AAENV,QAAAA,OAAO,EAAEW,MAAM,CAACE;AAFV,OAAN;AAKJ;;AACA,SAAK,cAAL;AACI,aAAM,EACF,GAAGH,KADD;AAEFL,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAFZ,OAAN;AAKJ;;AACA,SAAK,iBAAL;AACI,UAAIC,QAAQ,GAAGH,MAAM,CAACE,OAAtB;AACAL,MAAAA,YAAY,GAAG,EAAf;;AACA,WAAK,IAAI,CAACO,GAAD,EAAKC,KAAL,CAAT,IAAwBC,MAAM,CAACC,OAAP,CAAeJ,QAAf,CAAxB,EAAiD;AAC7C,YAAIE,KAAK,KAAK,IAAd,EAAmB;AACfR,UAAAA,YAAY,CAACW,IAAb,CAAkBJ,GAAlB;AACH;AACJ;;AACDK,MAAAA,OAAO,CAACC,GAAR,CAAYb,YAAZ;AACA,aAAM,EACF,GAAGE,KADD;AAEFH,QAAAA,YAAY,EAAEC;AAFZ,OAAN;;AAKJ;AACI,aAAOE,KAAP;AA/BR;AAiCH;;AAED,eAAeD,OAAf","sourcesContent":["//Reducers specify how the application's state changes in response to actions sent\n\nconst initialState = {\n\n    contact: {\n        name: '',\n        email: '',\n        address: '',\n        phone_number: ''\n    },\n    sauce: {\n        sauce: '',\n        crust: '',\n     },\n\n    toppingsList:{}\n}\n\nlet ToppingsList = [];\n\nfunction reducer(state = initialState, action) {  \n\n    switch(action.type) {\n        //Updates the user data to edit.data\n        case 'UPDATE_CONTACT':\n            return{\n            ...state,\n            contact: action.payload \n            }\n         \n        //updates the pizza sauce and crust data\n        case 'UPDATE_SAUCE':\n            return{\n                ...state,\n                sauce: action.payload \n                }\n           \n        //updates the toppings \n        case 'UPDATE_TOPPINGS':\n            let toppings = action.payload \n            ToppingsList = []\n            for (let [key,value] of Object.entries(toppings)){\n                if (value === true){\n                    ToppingsList.push(key)\n                }\n            }\n            console.log(ToppingsList)\n            return{\n                ...state,\n                toppingsList: ToppingsList\n                }\n\n        default:\n            return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}